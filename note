spring核心思想:IOC,Di,AOP
bean管理：
        1.spring创建对象
        2.spring注入属性
    操作方式：
        1.基于xml配置文件方式实现
        2.基于注解方式实现
    属性：id 唯一标识
          class 类全路径，包类路径
          name： 类似id，可以加符号，用得少
    默认使用无参数构造器创建对象
DI：依赖注入，注入属性
    有参构造注入constructor-arg
        属性注入公共化:
           xmlns:util="http://www.springframework.org/schema/util"
           xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                               http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

        <util:list id="bookList">
            <value>think in java</value>
            <value>think in kafka</value>
            <value>think in hadoop</value>
        </util:list>

        <bean id="Book" class="collectionType.Book">
        <property name="list" ref="bookList"></property>


map:<entry key ="" value = "">



spring默认bean单实例对象
scope设置singleton 加载配置文件时就会创建单实例对象
        prototype 在getBean获取对象时才会创建对象


bean的生命周期
    1 创建bean实例
    2 为bean的属性设置值和引用
    3 调用bean的初始化方法
    4 bean可以使用了，对象获取到了
    5 容器关闭，调用bean的销毁方法

AOP：
    1 通知（实际增强的部分）// 切入点
    *前置通知
    *后置通知
    *环绕通知
    *异常通知
    *最终通知
    2 切面
    *把通知应用到切入点的过程


